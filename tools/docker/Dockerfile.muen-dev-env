# Muen Development Environment
#
# Prerequisites for nested emulation:
#   - Linux kernel >= 5.2.0 with CR3 fix:
#     https://patchwork.kernel.org/patch/11165185/
#
# Build container:
#   docker build -t muen-dev-env -f Dockerfile.muen-dev-env .
#
# Enter the container:
#   ./run.muen-dev-env muen-dev-env

# Base image
ARG distro_name=debian
ARG distro_version=buster
FROM ${distro_name}:${distro_version}

LABEL maintainer "Adrian-Ken Rueegsegger <ken@codelabs.ch>"
LABEL description "This image provides the build environment for the Muen project"

ENV CC ccache gcc
ENV CXX ccache g++

# Required packages
ARG packages="acpica-tools amtterm autoconf automake autopoint bc binutils-dev \
bison bzip2 ca-certificates ccache cpio curl file flex git-core gnupg gnuplot \
inotify-tools kmod lcov libc6-dev libcurl4-gnutls-dev libelf-dev \
libfreetype6-dev libiberty-dev libncurses-dev libseccomp-dev libssl-dev \
libxml2-utils lighttpd make mtools openssh-client patch picocom pkg-config \
python python-lxml python-colorlog python-pip python-setuptools qemu-system-x86 \
rsync screen tidy unzip vim wget xfonts-unifont xorriso xsltproc xz-utils zlib1g-dev"

# Install dependencies
RUN apt-get update && \
	DEBIAN_FRONTEND=noninteractive apt-get install -qq -y \
	--no-install-recommends \
	$packages \
	&& rm -rf /var/lib/apt/lists/*

# Install AdaCore toolchain
RUN git clone https://github.com/AdaCore/gnat_community_install_script.git /tmp/gnat_script \
	&& curl -sSL "https://www.codelabs.ch/download/ada/gnat-community-2019-20190517-x86_64-linux-bin" -o /tmp/gnat_installer.bin \
	&& sh /tmp/gnat_script/install_package.sh /tmp/gnat_installer.bin /opt/gnat \
	&& rm -rf /tmp/gnat*

# amtc tool
RUN git clone https://github.com/schnoddelbotz/amtc.git /tmp/amtc \
	&& cd /tmp/amtc \
	&& make amtc \
	&& cp src/amtc /usr/local/bin \
	&& rm -rf /tmp/amtc

# Install solo5-elftool
RUN curl -sSL "https://github.com/Solo5/solo5/releases/download/v0.6.5/solo5-v0.6.5.tar.gz" -o /tmp/solo5-v0.6.5.tar.gz \
	&& tar -C /tmp/ -zxf /tmp/solo5-v0.6.5.tar.gz \
	&& cd /tmp/solo5-v0.6.5 \
	&& ./configure.sh --only-tools \
	&& make install-tools \
	&& rm -rf /tmp/solo5*

# Python modules
RUN pip install wheel \
	&& pip install 'lief==0.9.0'

# Setup environment
ENV HOME /home/user
ENV LANG C.UTF-8
ENV PATH /opt/gnat/bin:$PATH

RUN useradd --create-home --home-dir $HOME user -G dialout

WORKDIR $HOME
USER user

CMD [ "bash" ]
